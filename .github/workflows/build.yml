name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [published]

jobs:
  build:
    name: Build
    env:
        NUPKG_MAJOR: 1.0.0
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Setup Env
      run: mkdir ./output
    - name: Define CI version
      run: echo ::set-env name=NUPKG_VER::$NUPKG_MAJOR-pre$GITHUB_RUN_ID
    - name: Define Release Version
      if: github.event_name == 'release'
      run: echo ::set-env name=NUPKG_VER::${GITHUB_REF/refs\/tags\//}
    - name: Build Project
      run: dotnet build --configuration Release ./src/Pradana.ReactiveUI.XamForms/Pradana.ReactiveUI.XamForms.csproj
    - name: NuGet Pack
      run: dotnet pack --output ./artifacts -p:PackageVersion=$NUPKG_VER -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg --configuration Release ./src/Pradana.ReactiveUI.XamForms/Pradana.ReactiveUI.XamForms.csproj      
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1
      with:
        name: NuGet
        path: ./artifacts
  
  publish:
      name: Publish
      needs: build
      runs-on: windows-latest
      if: github.event_name == 'release'
      steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v1
          with:
            name: NuGet
        - name: Setup .NET Core
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: 3.1.101
        - name: Setup NuGet
          uses: nuget/setup-nuget@v1
          with:
            nuget-api-key: ${{ secrets.NUGET_API_KEY }}
            nuget-version: 'latest'
        - name: Push NuGet
          run: nuget push NuGet\*.nupkg -Source https://api.nuget.org/v3/index.json -ApiKey ${{ secrets.NUGET_API_KEY }}
